services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://localhost:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LOG_DIRS: /kafka-logs
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 10000
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 10000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-ui:
      image: provectuslabs/kafka-ui
      container_name: kafka-ui
      ports:
        - 8090:8080
      restart: always
      environment:
        - KAFKA_CLUSTERS_0_NAME=local
        - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
        - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  postgres:
    image: postgres:latest
    container_name: postgreSQL
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: backenddb
      PGDATA: /var/lib/postgres/data/pgdata
    ports:
      - "5432:5432"
#    volumes:
#      - postgres-data:/var/lib/postgres/data/pgdata
#      - postgres-data:/var/lib/postgres/data/pgdata
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
                -c shared_buffers=256MB
                -c effective_cache_size=768MB
                -c maintenance_work_mem=64MB
                -c checkpoint_completion_target=0.7
                -c wal_buffers=16MB
                -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d telegrambot" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

  postgres-2:
    image: postgres:latest
    container_name: postgreSQL-2
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: logdb
      PGDATA: /var/lib/postgresql/data/pgdata-logs
      PGPORT: 5433
    ports:
      - "5433:5433"
#    volumes:
#      #- postgres-data:/var/lib/postgres/data/pgdata-logs
#      - postgres-data:/var/lib/postgres/data/pgdata-logs
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
      postgres -c max_connections=1000
                -c shared_buffers=256MB
                -c effective_cache_size=768MB
                -c maintenance_work_mem=64MB
                -c checkpoint_completion_target=0.7
                -c wal_buffers=16MB
                -c default_statistics_target=100
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d telegrambotlogs" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

